plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.epages.restdocs-api-spec' version '0.18.2'
}

group 'com.practice'
version '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.jeasy:easy-random-core:5.0.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: "junit-vintage-engine"
        exclude module: 'junit'
    }

    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            'org.projectlombok:lombok'
    )

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.apache.commons:commons-lang3'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    annotationProcessor(
            "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta",
            'jakarta.persistence:jakarta.persistence-api',
            'jakarta.annotation:jakarta.annotation-api'
    )

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    implementation 'com.opencsv:opencsv:5.8'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file("$buildDir/generated"))
}

sourceSets {
    main.java.srcDirs += "$buildDir/generated"
}

clean {
    delete file('src/main/generated')
}

openapi3 {
    server = 'http://localhost:8080'
    title = 'Employee API 명세서'
    description = '직원 긴급 연락망 API'
    version = 'v1'
    format = 'json'
    tagDescriptionsPropertiesFile = 'src/test/resources/tag-descriptions.json'
}

tasks.register('createOpenApi') {
    dependsOn 'openapi3'
    doLast {
        copy {
            from 'build/api-spec'
            include '*.json'
            into 'build/resources/main/static/docs'
        }
    }
}

bootRun {
    dependsOn 'createOpenApi'
}

bootJar {
    dependsOn 'cleanUpOpenApi3'
    dependsOn 'openapi3'
    from('build/api-spec') {
        include '*.json'
        into 'static/docs'
    }
}

tasks.register('cleanUpOpenApi3') {
    delete files('build/api-spec/openapi3.json')
}

tasks.register('createOpenApiLocal') {
    dependsOn 'cleanUpOpenApi3'
    dependsOn 'openapi3'
    doLast {
        copy {
            from 'build/api-spec'
            include '*.json'
            into 'src/main/resources/static/docs'
        }
    }
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}
